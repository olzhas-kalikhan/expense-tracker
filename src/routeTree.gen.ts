/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ExpensesImport } from './routes/expenses'
import { Route as IndexImport } from './routes/index'
import { Route as ExpensesIndexImport } from './routes/expenses/index'
import { Route as ExpensesExpenseIdImport } from './routes/expenses/$expenseId'

// Create/Update Routes

const ExpensesRoute = ExpensesImport.update({
  path: '/expenses',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ExpensesIndexRoute = ExpensesIndexImport.update({
  path: '/',
  getParentRoute: () => ExpensesRoute,
} as any)

const ExpensesExpenseIdRoute = ExpensesExpenseIdImport.update({
  path: '/$expenseId',
  getParentRoute: () => ExpensesRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/expenses': {
      id: '/expenses'
      path: '/expenses'
      fullPath: '/expenses'
      preLoaderRoute: typeof ExpensesImport
      parentRoute: typeof rootRoute
    }
    '/expenses/$expenseId': {
      id: '/expenses/$expenseId'
      path: '/$expenseId'
      fullPath: '/expenses/$expenseId'
      preLoaderRoute: typeof ExpensesExpenseIdImport
      parentRoute: typeof ExpensesImport
    }
    '/expenses/': {
      id: '/expenses/'
      path: '/'
      fullPath: '/expenses/'
      preLoaderRoute: typeof ExpensesIndexImport
      parentRoute: typeof ExpensesImport
    }
  }
}

// Create and export the route tree

interface ExpensesRouteChildren {
  ExpensesExpenseIdRoute: typeof ExpensesExpenseIdRoute
  ExpensesIndexRoute: typeof ExpensesIndexRoute
}

const ExpensesRouteChildren: ExpensesRouteChildren = {
  ExpensesExpenseIdRoute: ExpensesExpenseIdRoute,
  ExpensesIndexRoute: ExpensesIndexRoute,
}

const ExpensesRouteWithChildren = ExpensesRoute._addFileChildren(
  ExpensesRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/expenses': typeof ExpensesRouteWithChildren
  '/expenses/$expenseId': typeof ExpensesExpenseIdRoute
  '/expenses/': typeof ExpensesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/expenses/$expenseId': typeof ExpensesExpenseIdRoute
  '/expenses': typeof ExpensesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/expenses': typeof ExpensesRouteWithChildren
  '/expenses/$expenseId': typeof ExpensesExpenseIdRoute
  '/expenses/': typeof ExpensesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/expenses' | '/expenses/$expenseId' | '/expenses/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/expenses/$expenseId' | '/expenses'
  id: '__root__' | '/' | '/expenses' | '/expenses/$expenseId' | '/expenses/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ExpensesRoute: typeof ExpensesRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ExpensesRoute: ExpensesRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/expenses"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/expenses": {
      "filePath": "expenses.tsx",
      "children": [
        "/expenses/$expenseId",
        "/expenses/"
      ]
    },
    "/expenses/$expenseId": {
      "filePath": "expenses/$expenseId.tsx",
      "parent": "/expenses"
    },
    "/expenses/": {
      "filePath": "expenses/index.tsx",
      "parent": "/expenses"
    }
  }
}
ROUTE_MANIFEST_END */
